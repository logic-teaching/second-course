<br>
<br>

# Chapter 1, Practice Problems, Review of propositional logic

This section meeting is an opportunity to review propositional logic together. Further, since we took our first logic course at different places using different books, we'll use this opportunity to just try to converge upon some common notation.

As for the concepts of translations, tautologies, and valid arguments, many of these will no doubt seem familiar from your first logic course. If some of them seem unfamiliar, don't worry: in our study of predicate logic we'll run into them again and have lots of time to learn them well.

There are probably more problems here than we can do in an hour. That's okay: our main goal here in week one is just to remind ourselves of our first logic course and to get to do some logic together. Take the problems we don't get to in section as an opportunity for further practice later on, on your own.

- [Main connectives and truth-tables](#main-connectives-and-truth-tables)
- [Translations](#translations)
- [Tautologies and equivalences](#tautologies-and-equivalences)
- [List of named tautologies and equivalences](#list-of-named-tautologies-and-equivalences)
- [Tautology or not](#tautology-or-not)
- [Valid or not](#valid-or-not)

<br>

## Main connectives and truth-tables

For the first two problems, draw the tree diagram associated to the formulas, by successively finding the main connectives of the formulas, starting with the big formulas and breaking them into smaller parts. On paper, simply draw the tree diagram. On the computer, successively find the main connectives (pressing 'return' to move to next connective), until the tree diagram has been drawn. (If you get something wrong, and you are doing it on the computer, you may get some popups that tell you that it is wrong-- just click 'escape' on your keyboard to try again).

<br>

*Problem 1*

```{.SynChecker .Match system="gamutPND" submission="none"}
 (~p\/(~q/\~r))
```
<br>

<br>

<br>

<br>

*Problem 2*

```{.SynChecker .Match system="gamutPND" submission="none"}
 (~p->(~q->~r))
```
<br>

<br>

<br>

<br>

<br>

For these next three problems, complete the truth-table. On the computer, you can check your truth-table for correctness.

*Problem 3*

~~~{.TruthTable .Simple system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 (~p\/(~q/\~r))
~~~


<br>

*Problem 4*

~~~{.TruthTable .Simple system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 (~p->(~q->~r))
~~~

<br>

*Problem 5*

~~~{.TruthTable .Simple system="gamutPND" options="nodash nocounterexample autoAtoms" submission="none"}
 ~~p/\~~q
~~~


<br>

## Translations

In these translation exercises, we use the abbreviations:

<p style="margin-left: 40px"> $a$ = Alex helps </p>
<p style="margin-left: 40px"> $b$ = Briana helps </p>
<p style="margin-left: 40px"> $c$ = Cynthia helps </p>
<p style="margin-left: 40px"> $d$ = Dylan helps  </p>

*Problem 6*

~~~{.Translate .Prop system="gamutPND" submission="none"}
 (a\/c)->(d/\b) : If Anthony helps or Cynthia helps then Dylan helps and Briana helps.
|
~~~

*Problem 7*

~~~{.Translate .Prop system="gamutPND" submission="none"}
 (d/\~b)->(~c\/a) : If Dylan helps and Briana does not help then Cynthia does not help or Anthony helps.
|
~~~

*Problem 8*

~~~{.Translate .Prop system="gamutPND" submission="none"}
 (a->~b)/\(~c->d) : If Anthony helps then Briana does not help, and if Claire does not help then Dylan helps.
|
~~~

*Problem 9*

~~~{.Translate .Prop system="gamutPND" submission="none"}
 (~b->(a/\c)): If Briana does not help then Anthony helps and Cynthia helps.
|
~~~

*Problem 10*

~~~{.Translate .Prop system="gamutPND" submission="none"}
 ~(~a->b) : It is not the case that if Anthony does not help then Briana helps.
|
~~~

<br>

## Tautologies and equivalences

<br>

A *tautology* is a well-formed formula that is always true. That is, when you look at its truth-table, you see all true's in the column under the main connective. (In a table, the rows go left to right, and the columns go up and down).

*Problem 11*

*Law of excluded middle*: $p\vee \neg p$ is a tautology.

~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 p\/~p
~~~

*Problem 12*

*Law of non-contradiction*: $\neg (p\wedge \neg p)$ is a tautology.

~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 ~(p/\~p)
~~~

<br>

An *equivalence* is just two formulas $\phi$ and $\psi$ such that their biconditional $\phi\leftrightarrow \psi$ is a tautology. Equivalence are then useful because they are true or false in precisely the same circumstances.

*Problem 13*

*The law of double-negation*: $p$ is equivalent to $\neg \neg p$.

~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 p, ~~p
~~~

The law of double-negation is an equivalence because for each row, the truth-values of the two formulas separated by a comma are the same. By definition, this means that $p\leftrightarrow \neg \neg p$ is a tautology, as you can see here:

~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 p <-> ~~p
~~~

*Problem 14*

*Law of commutativity for conjunction*: $p\wedge q$ is equivalent to $q\wedge p$.

~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 p/\q, q/\p
~~~

*Problem 15*

*Law of distribution for conjunction*: $p\wedge (q\vee r)$ is equivalent to $(p\wedge q)\vee (p\wedge r)$.


~~~{.TruthTable .Simple system="gamutPND" options="nocounterexample autoAtoms nodash" submission="none"}
 p/\(q\/r), (p/\q)\/(p/\r)
|
~~~

<br>

## List of named tautologies and equivalences

As we have seen above, there are some tautologies and equivalences which are named. Here is a list of some of the more frequently used tautologies and equivalences.

1. *Law of excluded middle*: $p\vee \neg p$ is a tautology.
2. *Law of non-contradiction*: $\neg (p\wedge \neg p)$ is a tautology.
3. *The law of double-negation*: $p$ is equivalent to $\neg \neg p$.
4. *Law of commutativity for conjunction*: $p\wedge q$ is equivalent to $q\wedge p$.
5. *Law of commutativity for disjunction*: $p\vee q$ is equivalent to $q\vee p$.
6. *Law of associativity for conjunction*: $(p\wedge q)\wedge r$ is equivalent to $p\wedge (q\wedge r)$.
7. *Law of associativity for disjunction*: $(p\vee q)\vee r$ is equivalent to $p\vee (q\vee r)$.
8. *Law of distribution for conjunction*: $p\wedge (q\vee r)$ is equivalent to $(p\wedge q)\vee (p\wedge r)$.
9. *Law of distribution for disjunction*: $p\vee (q\wedge r)$ is equivalent to $(p\vee q)\wedge (p\vee r)$.
10. *DeMorgan*: $\neg (p\wedge q)$ is equivalent to $\neg p \vee \neg q$.
11. *DeMorgan*: $\neg (p\vee q)$ is equivalent to $\neg p \wedge \neg q$.

For easy reference, [here](https://drive.google.com/file/d/1kxWJ7yFQuU3SoaFpcMditzWqkXUAwQZ-/view?usp=share_link) is this table as an image. And [here](https://drive.google.com/file/d/1h3tn0DMwSjUHX98hRnhiu1rD6d7F_r0k/view?usp=share_link) and [here](https://drive.google.com/file/d/1YhjttSDC_FqCo9nOKg_wptqihtVeOnw-/view?usp=share_link) are two versions with different letters besides $p,q$, which is sometimes useful for the purpose of memorization and application.

<br>

## Tautology or not

In the next two problems, determine whether the formula is a tautology or not. If it is a tautology simply fill out the entire table and indicate that it is a tautology in the subsequent yes/no question. If it is not a tautology, indicate a row where it is false-- on the computer just enter the row, while on paper circle the row-- and then explicitly indicate that it is not a tautology in the subsequent yes/no question.

<br>

*Problem 16*

~~~{.TruthTable .Simple system="gamutPND" options="nodash autoAtoms" counterexample-to="tautology" submission="none"}
 ((p/\q)/\(q->p))->(q->p)
|
~~~

```{.QualitativeProblem .MultipleChoice submission="none" options="check"}
 Is the formula a tautology?
| *Yes.
| No.
```
<br>


<br>

*Problem 17*

~~~{.TruthTable .Simple system="gamutPND" options="nodash autoAtoms" counterexample-to="tautology" submission="none"}
 (q->p)->((p/\q)/\(q->p))
~~~

```{.QualitativeProblem .MultipleChoice submission="none" options="check"}
 Is the formula a tautology?
| Yes.
| *No.
```


<br>

## Valid or not

Intuitively, an argument is *valid* if whenever all the premises are true, then the conclusion is also true. How exactly one formalizes the notion of variance in the 'whenever' depends on the logic one is working in. In propositional logic, we formalize as follows: a *valid argument* is one such that for all rows of the truth table, if all the premises are true in that row, then the conclusion is true in that row. Likewise, an *invalid argument* is one such that there is a row of the truth table such that all of the premises are true in that row, but one the conclusion is false in that row. (In a table, the rows go left to right, and the columns go up and down).

In the next two problems, determine whether the argument is valid or not. If it is valid simply fill out the entire table and indicate that it is valid in the subsequent yes/no question. If it is not valid, indicate a row where the premises are all true and the conclusion is false-- on the computer just enter the row, while on paper circle the row-- and then explicitly indicate that it is valid in the subsequent yes/no question. Note that in the column under the consequence symbol $\models$, it is asking you to determine whether: if all the premises are true in the row, then the conclusion is also true.

<br>

*Problem 18*.

```{.TruthTable .Validity system="gamutPND" submission="none" options="double-turnstile nodash autoAtoms"}
 a\/b, c->a, c->b :|-: ~c
```

```{.QualitativeProblem .MultipleChoice submission="none" options="check"}
 It the argument valid?
| Yes.
| *No.
```

<br>

*Problem 19*.

```{.TruthTable .Validity system="gamutPND" submission="none" options="double-turnstile nodash autoAtoms"}
 a\/b, a->~c, b->~c :|-: ~c
```

```{.QualitativeProblem .MultipleChoice submission="none" options="check"}
 It the argument valid?
| *Yes.
| No.
```
<br>


*Problem 20*

One and only one of the following statements is always true about valid arguments:

```{.QualitativeProblem .MultipleChoice options="check" submission="none"}
 Which of the following is always true?
| If a valid argument has a false conclusion, then it has a true premise.
| If a valid argument has a false conclusion, then it has all false premises.
| *If a valid argument has a false conclusion, then it has a false premise.
| If a valid argument has a false conclusion, then it has all true premises.
```

<br>
